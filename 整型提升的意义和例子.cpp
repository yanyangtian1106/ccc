#define _CRT_SECURE_NO_WARNINGS 1
int main()
{
	//整型提升的意义：
	
	// 表达式的整型运算要在CPU的相应运算器件内执行，CPU内整型运算器（ALU）的操作数的字节长度一般就是int的字节长度，同时也是CPU的通用寄存器长度
	// 因此，即使两个char类型的相加，在CPU执行时实际上也要先转换为CPU内整型操作数的标准长度
	// 所以  表达式  中各种长度可能小于int长度的整型值，都必须先转换为int或unsigned int，然后才能送进CPU

  // 进行运算就会整型提升

	//整型提升案例
	char a = 0xb6;//0xb6转换为2进制为：10110110，刚好一个字节能够放进char中
	short b = 0xb600;
	int c = 0xb6000000;
	if (a == 0xb6)//但是==也是一种运算，比较的时候就会发生整型提升变成11111111111111111111111110110110，所以不打印a
	{
		printf("a");
	}
	if (b == 0xb600)//同理a
	{
		printf("b");
	}
	if (c == 0xb6000000)//int刚好能够放进去所以不发生整型提升
	{
		printf("c");
	}
	return 0;
}